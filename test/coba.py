import numpy as np
import scipy.stats
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from statistics import mode

data = [239.22837624, 236.17695463, 235.61435202, 242.40966253, 224.84181247,
 233.85623488, 247.01415491,  53.96439641, 242.51053009, 229.23819172,
 231.24316018, 231.55639591, 233.52107147, 250.25670595, 243.08192273,
 230.99194492, 239.22517448,  53.01103119, 227.36265546, 236.76502527,
 237.48161293, 234.97305573, 235.00798852,  77.52367704, 238.34005113,
 228.79092252,  44.64788461, 255.05806022, 226.88441908, 236.80315213,
 240.95864028, 236.2566435,   73.79629329, 250.82011644, 240.36610709,
 229.7989734, 239.84562799, 239.99179937, 227.99093931, 251.53317677,
  69.43027419, 236.98629445, 235.7707022,  236.8313593,  232.68874438,
 232.53718579, 234.19065123,  67.87248476, 232.42310138, 233.90748017,
 239.66044537, 232.50492353, 230.54260574,  42.99793971, 230.00773663,
 233.74068212, 239.90952859, 235.78364126,  74.5338471 ,  70.54494816,
 244.93778431, 239.60012187, 255.23652757, 238.87560952, 221.10500805,
 222.26559486,  64.17963988, 221.78582936, 225.96492901, 223.3640806,
 230.19077721, 226.06512719, 236.15183146, 251.2700893,  251.61076085,
 232.97750731,  60.13669521, 232.3548325,  226.88735658, 241.70764791,
 242.82411936, 227.92186061, 220.33498052, 245.64229994, 222.10307974,
  52.71460525,  58.50740049, 250.30851304, 235.58196704, 245.0867804,
 236.11951257, 227.39205495, 237.97934719,  45.32645257, 239.56156583,
 240.93973291, 232.8076048,  230.49928549, 240.26904938, 226.76725172,
 241.88961397, 234.30815235, 230.3469086,  217.8840756,  242.00724398,
 236.98462389, 234.81482798, 245.70303471, 237.42949056, 243.26043925,
 229.38226482,  67.3640464,  218.02993839, 266.56498434, 226.50765794,
  60.92837039, 247.25645486, 229.20842409, 236.41444409, 229.79401624,
 218.45101508, 250.402532,   220.14473458, 234.31394528, 257.30478481,
  48.4750572, 250.02063713, 217.45474095,  65.13506777, 223.17611053,
 233.38812468, 236.97118773, 231.14973961, 217.64753973, 237.5689633,
 229.63079877, 223.57603449, 224.50354757,  43.16079151, 232.86458934,
 230.24979771, 224.68818943, 252.20276541,  60.13969453, 247.38821841,
 240.19109292, 220.71678061,  70.78480916, 244.81423198, 235.85529842,
 212.1696356, 229.20489642, 243.63834824, 234.41115438, 232.45852335,
  51.36508588, 221.83471069, 248.16775289, 239.07140996, 215.1470504,
  50.83610617, 239.27396753,   8.9847493,  228.33395282,  65.60654908,
 238.46585118, 229.47072828,  67.19558879,  55.09676767, 226.27539718,
 240.90020652, 245.42767587, 235.399244,   240.06037703, 251.82170668,
 232.6374687,  239.21070987, 233.63913872, 226.4484489,  227.37132061,
 244.37066833, 244.28164099,  68.83422828, 230.41634542, 228.73821246,
 234.52235866,  56.81755671, 228.56270526, 233.23558516,  49.3237009,
 243.7549985,  238.21225303, 243.61872171, 226.39037543, 230.40905371,
 230.92154094, 233.27717784,  68.19566524, 220.70799426, 226.91553644,
  67.22971155, 230.23065181, 226.12342534, 228.98887495, 235.23016574,
 222.65901558, 212.42143644, 223.19133194, 240.83925399,  64.30187533,
  55.66094014,  39.45828264,  56.58057164, 242.34582305, 238.22107977,
 240.76427458, 241.80764609, 235.38356225, 235.93864162, 236.70274143,
 231.39038646, 227.85497814, 229.77810124, 217.49764673, 237.33217609,
 218.81587675, 235.34380151,  43.07564081,  71.68203157,  65.74868453,
 231.17753626, 230.60344749, 226.85507815, 238.48925791, 233.97225417,
 231.90750645, 230.16352428, 229.6151926,  220.25416632, 234.81397445,
 237.48519132, 244.46796381, 222.13738446, 240.57260416, 244.31122478,
 237.064097,   245.16403043, 228.0531451,   99.00734268, 227.81037957]


modus = mode(data)

def reverse_degree(origin_list, modus):
    mid = [x for x in origin_list if modus-90 < x < modus+90]
    up = [x-180 for x in origin_list if x > modus+90]
    below = [x+180 for x in origin_list if x < modus-90]
    result = mid + up + below
    result.sort()
    return result

data1 = reverse_degree(data, modus)
    
         
#dist_data = pd.DataFrame(data[0], columns=["azimuth"])

#sns.displot(dist_data, x="azimuth", bins=20)
#sns.displot(dist_data, x="azimuth", kind="kde")
#print(dist_data)
#plt.show()
def rad_360():
    radians = np.linspace(0, ((2*np.pi)-(np.pi/180)), 360)
    tinggi = []
    for i in range(360):
        if i == 0:
            temp1 = [x for x in data if x < 0.5]
            temp2 = [x for x in data if 359.5 < x]
            n = len(temp1)+len(temp2)
        else:
            temp = [x for x in data if i-0.5 < x < i+0.5]
            n = len(temp)
        tinggi.append(n)
    ax = plt.subplot(projection='polar')
    ax.bar(radians, tinggi, width = np.pi/180)

def rad_16():
    radians = np.linspace(0, ((2*np.pi)-(np.pi/180)), 16)
    tinggi = []
    for i in range(16):
        if i == 0:
            temp1 = [x for x in data if x < 11.25]
            temp2 = [x for x in data if 348.75 < x]
            n = len(temp1)+len(temp2)
        else:
            temp = [x for x in data if (22.5*i)-11.25 < x < (22.5*i)+11.25]
            n = len(temp)
        tinggi.append(n)
    print(radians)
    print(tinggi)
    ax = plt.subplot(projection='polar')
    ax.bar(radians, tinggi, width = 2*np.pi/16)

def rad_32():
    radians = np.linspace(0, ((2*np.pi)-(np.pi/180)), 32)
    tinggi = []
    for i in range(32):
        if i == 0:
            temp1 = [x for x in data if x < 5.625]
            temp2 = [x for x in data if 354.375 < x]
            n = len(temp1)+len(temp2)
        else:
            temp = [x for x in data if (11.25*i)-5.625 < x < (11.25*i)+5.625]
            n = len(temp)
        tinggi.append(n)
    ax = plt.subplot(projection='polar')
    ax.bar(radians, tinggi, width = 2*np.pi/32)

def histo(list):
    plt.hist(list, bins = 25)

print(len(data), len(data1))

histo(data)
plt.show()
rad_360()
plt.show()
histo(data1)
plt.show()